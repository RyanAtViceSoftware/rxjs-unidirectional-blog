'use strict';

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _module = require('./properties/module');

var _module2 = _interopRequireDefault(_module);

var _entry = require('./properties/entry');

var _entry2 = _interopRequireDefault(_entry);

var _context = require('./properties/context');

var _context2 = _interopRequireDefault(_context);

var _devtool = require('./properties/devtool');

var _devtool2 = _interopRequireDefault(_devtool);

var _externals = require('./properties/externals');

var _externals2 = _interopRequireDefault(_externals);

var _node = require('./properties/node');

var _node2 = _interopRequireDefault(_node);

var _plugins = require('./properties/plugins');

var _plugins2 = _interopRequireDefault(_plugins);

var _resolve = require('./properties/resolve');

var _resolve2 = _interopRequireDefault(_resolve);

var _output = require('./properties/output');

var _output2 = _interopRequireDefault(_output);

var _watchOptions = require('./properties/watchOptions');

var _watchOptions2 = _interopRequireDefault(_watchOptions);

var _devServer = require('./properties/devServer');

var _devServer2 = _interopRequireDefault(_devServer);

var _types = require('./types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schema = _joi2.default.object({
  amd: _joi2.default.object(),
  bail: _joi2.default.boolean(),
  cache: _joi2.default.boolean(),
  context: _context2.default,
  debug: _joi2.default.boolean(),
  devServer: _devServer2.default,
  devtool: _devtool2.default,
  entry: _entry2.default,
  externals: _externals2.default,
  loader: _joi2.default.any(), // ?
  module: _module2.default,
  node: _node2.default,
  output: _output2.default,
  plugins: _plugins2.default,
  profile: _joi2.default.boolean(),
  recordsInputPath: _types.absolutePath,
  recordsOutputPath: _types.absolutePath,
  recordsPath: _types.absolutePath,
  resolve: _resolve2.default,
  resolveLoader: _resolve2.default.concat(_joi2.default.object({
    moduleTemplates: _joi2.default.array().items(_joi2.default.string())
  })),
  watchOptions: _watchOptions2.default,
  stats: _joi2.default.any(), // TODO
  target: _joi2.default.any(), // TODO

  // Plugins
  postcss: _joi2.default.any(),
  eslint: _joi2.default.any(),
  tslint: _joi2.default.any(),
  metadata: _joi2.default.any()
}); //.unknown()

// Easier consumability for require (default use case for non-transpiled webpack configs)
module.exports = function validate(config) {
  var schema_ = arguments.length <= 1 || arguments[1] === undefined ? schema : arguments[1];
  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
  var
  // Don't return the config object and throw on error, but just return the validation result
  returnValidation = // bool
  options.returnValidation;
  var // bool
  quiet = options.quiet;


  var validationResult = _joi2.default.validate(config, schema_, { abortEarly: false });
  if (returnValidation) return validationResult;

  if (validationResult.error) {
    console.error(validationResult.error.annotate());
    process.exit(1);
  }

  if (!quiet) {
    console.info(_chalk2.default.green('[webpack-validator] Config is valid.'));
  }

  return config;
};
module.exports.schema = schema;